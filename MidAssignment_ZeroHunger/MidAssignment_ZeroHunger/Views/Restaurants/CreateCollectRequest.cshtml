@model MidAssignment_ZeroHunger.DTOs.CollectRequestDTO

@{
    ViewBag.Title = "CreateCollectRequest";
}

<h2>Create Collect Request</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.RestaurantsId)

    <div class="form-group">
        @Html.LabelFor(model => model.Food_Name,"Food Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Food_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Food_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Food_Description,"Food Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Food_Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Food_Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Food_Quantity, "Food Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Food_Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Food_Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preservation_Time, "Maximum Preservation (in hours)", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preservation_Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preservation_Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Request_Time,"Request Creation Time", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Request_Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Request_Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.Employee_Status)
        @Html.HiddenFor(model => model.Employee_id)
        @Html.HiddenFor(model => model.Distribution_Status)
        @Html.HiddenFor(model => model.NgoId)
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Dashboard", "Dashboard")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
